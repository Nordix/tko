// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/nephio-experimental/tko/api/krm/tko.nephio.org/v1alpha1"
	scheme "github.com/nephio-experimental/tko/api/kubernetes-client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// DeploymentsGetter has a method to return a DeploymentInterface.
// A group's client should implement this interface.
type DeploymentsGetter interface {
	Deployments(namespace string) DeploymentInterface
}

// DeploymentInterface has methods to work with Deployment resources.
type DeploymentInterface interface {
	Create(ctx context.Context, deployment *v1alpha1.Deployment, opts v1.CreateOptions) (*v1alpha1.Deployment, error)
	Update(ctx context.Context, deployment *v1alpha1.Deployment, opts v1.UpdateOptions) (*v1alpha1.Deployment, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, deployment *v1alpha1.Deployment, opts v1.UpdateOptions) (*v1alpha1.Deployment, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.Deployment, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.DeploymentList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.Deployment, err error)
	DeploymentExpansion
}

// deployments implements DeploymentInterface
type deployments struct {
	*gentype.ClientWithList[*v1alpha1.Deployment, *v1alpha1.DeploymentList]
}

// newDeployments returns a Deployments
func newDeployments(c *TkoV1alpha1Client, namespace string) *deployments {
	return &deployments{
		gentype.NewClientWithList[*v1alpha1.Deployment, *v1alpha1.DeploymentList](
			"deployments",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.Deployment { return &v1alpha1.Deployment{} },
			func() *v1alpha1.DeploymentList { return &v1alpha1.DeploymentList{} }),
	}
}
