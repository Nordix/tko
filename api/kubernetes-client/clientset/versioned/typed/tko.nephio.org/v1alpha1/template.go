// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	v1alpha1 "github.com/nephio-experimental/tko/api/krm/tko.nephio.org/v1alpha1"
	scheme "github.com/nephio-experimental/tko/api/kubernetes-client/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// TemplatesGetter has a method to return a TemplateInterface.
// A group's client should implement this interface.
type TemplatesGetter interface {
	Templates() TemplateInterface
}

// TemplateInterface has methods to work with Template resources.
type TemplateInterface interface {
	Create(ctx context.Context, template *v1alpha1.Template, opts v1.CreateOptions) (*v1alpha1.Template, error)
	Update(ctx context.Context, template *v1alpha1.Template, opts v1.UpdateOptions) (*v1alpha1.Template, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, template *v1alpha1.Template, opts v1.UpdateOptions) (*v1alpha1.Template, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.Template, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.TemplateList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.Template, err error)
	TemplateExpansion
}

// templates implements TemplateInterface
type templates struct {
	*gentype.ClientWithList[*v1alpha1.Template, *v1alpha1.TemplateList]
}

// newTemplates returns a Templates
func newTemplates(c *TkoV1alpha1Client) *templates {
	return &templates{
		gentype.NewClientWithList[*v1alpha1.Template, *v1alpha1.TemplateList](
			"templates",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *v1alpha1.Template { return &v1alpha1.Template{} },
			func() *v1alpha1.TemplateList { return &v1alpha1.TemplateList{} }),
	}
}
