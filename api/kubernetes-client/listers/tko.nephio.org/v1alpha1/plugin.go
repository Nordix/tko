// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/nephio-experimental/tko/api/krm/tko.nephio.org/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// PluginLister helps list Plugins.
// All objects returned here must be treated as read-only.
type PluginLister interface {
	// List lists all Plugins in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Plugin, err error)
	// Plugins returns an object that can list and get Plugins.
	Plugins(namespace string) PluginNamespaceLister
	PluginListerExpansion
}

// pluginLister implements the PluginLister interface.
type pluginLister struct {
	listers.ResourceIndexer[*v1alpha1.Plugin]
}

// NewPluginLister returns a new PluginLister.
func NewPluginLister(indexer cache.Indexer) PluginLister {
	return &pluginLister{listers.New[*v1alpha1.Plugin](indexer, v1alpha1.Resource("plugin"))}
}

// Plugins returns an object that can list and get Plugins.
func (s *pluginLister) Plugins(namespace string) PluginNamespaceLister {
	return pluginNamespaceLister{listers.NewNamespaced[*v1alpha1.Plugin](s.ResourceIndexer, namespace)}
}

// PluginNamespaceLister helps list and get Plugins.
// All objects returned here must be treated as read-only.
type PluginNamespaceLister interface {
	// List lists all Plugins in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Plugin, err error)
	// Get retrieves the Plugin from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Plugin, error)
	PluginNamespaceListerExpansion
}

// pluginNamespaceLister implements the PluginNamespaceLister
// interface.
type pluginNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Plugin]
}
