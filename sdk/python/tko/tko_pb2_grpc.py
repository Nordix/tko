# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from tko import tko_pb2 as tko_dot_tko__pb2


class APIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registerTemplate = channel.unary_unary(
                '/tko.API/registerTemplate',
                request_serializer=tko_dot_tko__pb2.Template.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.RegisterResponse.FromString,
                )
        self.deleteTemplate = channel.unary_unary(
                '/tko.API/deleteTemplate',
                request_serializer=tko_dot_tko__pb2.DeleteTemplate.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.DeleteResponse.FromString,
                )
        self.getTemplate = channel.unary_unary(
                '/tko.API/getTemplate',
                request_serializer=tko_dot_tko__pb2.GetTemplate.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.Template.FromString,
                )
        self.listTemplates = channel.unary_stream(
                '/tko.API/listTemplates',
                request_serializer=tko_dot_tko__pb2.ListTemplates.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.ListTemplatesResponse.FromString,
                )
        self.registerSite = channel.unary_unary(
                '/tko.API/registerSite',
                request_serializer=tko_dot_tko__pb2.Site.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.RegisterResponse.FromString,
                )
        self.deleteSite = channel.unary_unary(
                '/tko.API/deleteSite',
                request_serializer=tko_dot_tko__pb2.DeleteSite.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.DeleteResponse.FromString,
                )
        self.getSite = channel.unary_unary(
                '/tko.API/getSite',
                request_serializer=tko_dot_tko__pb2.GetSite.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.Site.FromString,
                )
        self.listSites = channel.unary_stream(
                '/tko.API/listSites',
                request_serializer=tko_dot_tko__pb2.ListSites.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.ListSitesResponse.FromString,
                )
        self.createDeployment = channel.unary_unary(
                '/tko.API/createDeployment',
                request_serializer=tko_dot_tko__pb2.CreateDeployment.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.CreateDeploymentResponse.FromString,
                )
        self.deleteDeployment = channel.unary_unary(
                '/tko.API/deleteDeployment',
                request_serializer=tko_dot_tko__pb2.DeleteDeployment.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.DeleteResponse.FromString,
                )
        self.getDeployment = channel.unary_unary(
                '/tko.API/getDeployment',
                request_serializer=tko_dot_tko__pb2.GetDeployment.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.Deployment.FromString,
                )
        self.listDeployments = channel.unary_stream(
                '/tko.API/listDeployments',
                request_serializer=tko_dot_tko__pb2.ListDeployments.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.ListDeploymentsResponse.FromString,
                )
        self.startDeploymentModification = channel.unary_unary(
                '/tko.API/startDeploymentModification',
                request_serializer=tko_dot_tko__pb2.StartDeploymentModification.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.StartDeploymentModificationResponse.FromString,
                )
        self.endDeploymentModification = channel.unary_unary(
                '/tko.API/endDeploymentModification',
                request_serializer=tko_dot_tko__pb2.EndDeploymentModification.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.EndDeploymentModificationResponse.FromString,
                )
        self.cancelDeploymentModification = channel.unary_unary(
                '/tko.API/cancelDeploymentModification',
                request_serializer=tko_dot_tko__pb2.CancelDeploymentModification.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.CancelDeploymentModificationResponse.FromString,
                )
        self.registerPlugin = channel.unary_unary(
                '/tko.API/registerPlugin',
                request_serializer=tko_dot_tko__pb2.Plugin.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.RegisterResponse.FromString,
                )
        self.deletePlugin = channel.unary_unary(
                '/tko.API/deletePlugin',
                request_serializer=tko_dot_tko__pb2.DeletePlugin.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.DeleteResponse.FromString,
                )
        self.getPlugin = channel.unary_unary(
                '/tko.API/getPlugin',
                request_serializer=tko_dot_tko__pb2.GetPlugin.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.Plugin.FromString,
                )
        self.listPlugins = channel.unary_stream(
                '/tko.API/listPlugins',
                request_serializer=tko_dot_tko__pb2.ListPlugins.SerializeToString,
                response_deserializer=tko_dot_tko__pb2.ListPluginsResponse.FromString,
                )


class APIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def registerTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listTemplates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def registerSite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteSite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listSites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listDeployments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startDeploymentModification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def endDeploymentModification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelDeploymentModification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def registerPlugin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletePlugin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPlugin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listPlugins(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_APIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registerTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.registerTemplate,
                    request_deserializer=tko_dot_tko__pb2.Template.FromString,
                    response_serializer=tko_dot_tko__pb2.RegisterResponse.SerializeToString,
            ),
            'deleteTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteTemplate,
                    request_deserializer=tko_dot_tko__pb2.DeleteTemplate.FromString,
                    response_serializer=tko_dot_tko__pb2.DeleteResponse.SerializeToString,
            ),
            'getTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.getTemplate,
                    request_deserializer=tko_dot_tko__pb2.GetTemplate.FromString,
                    response_serializer=tko_dot_tko__pb2.Template.SerializeToString,
            ),
            'listTemplates': grpc.unary_stream_rpc_method_handler(
                    servicer.listTemplates,
                    request_deserializer=tko_dot_tko__pb2.ListTemplates.FromString,
                    response_serializer=tko_dot_tko__pb2.ListTemplatesResponse.SerializeToString,
            ),
            'registerSite': grpc.unary_unary_rpc_method_handler(
                    servicer.registerSite,
                    request_deserializer=tko_dot_tko__pb2.Site.FromString,
                    response_serializer=tko_dot_tko__pb2.RegisterResponse.SerializeToString,
            ),
            'deleteSite': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteSite,
                    request_deserializer=tko_dot_tko__pb2.DeleteSite.FromString,
                    response_serializer=tko_dot_tko__pb2.DeleteResponse.SerializeToString,
            ),
            'getSite': grpc.unary_unary_rpc_method_handler(
                    servicer.getSite,
                    request_deserializer=tko_dot_tko__pb2.GetSite.FromString,
                    response_serializer=tko_dot_tko__pb2.Site.SerializeToString,
            ),
            'listSites': grpc.unary_stream_rpc_method_handler(
                    servicer.listSites,
                    request_deserializer=tko_dot_tko__pb2.ListSites.FromString,
                    response_serializer=tko_dot_tko__pb2.ListSitesResponse.SerializeToString,
            ),
            'createDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.createDeployment,
                    request_deserializer=tko_dot_tko__pb2.CreateDeployment.FromString,
                    response_serializer=tko_dot_tko__pb2.CreateDeploymentResponse.SerializeToString,
            ),
            'deleteDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteDeployment,
                    request_deserializer=tko_dot_tko__pb2.DeleteDeployment.FromString,
                    response_serializer=tko_dot_tko__pb2.DeleteResponse.SerializeToString,
            ),
            'getDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.getDeployment,
                    request_deserializer=tko_dot_tko__pb2.GetDeployment.FromString,
                    response_serializer=tko_dot_tko__pb2.Deployment.SerializeToString,
            ),
            'listDeployments': grpc.unary_stream_rpc_method_handler(
                    servicer.listDeployments,
                    request_deserializer=tko_dot_tko__pb2.ListDeployments.FromString,
                    response_serializer=tko_dot_tko__pb2.ListDeploymentsResponse.SerializeToString,
            ),
            'startDeploymentModification': grpc.unary_unary_rpc_method_handler(
                    servicer.startDeploymentModification,
                    request_deserializer=tko_dot_tko__pb2.StartDeploymentModification.FromString,
                    response_serializer=tko_dot_tko__pb2.StartDeploymentModificationResponse.SerializeToString,
            ),
            'endDeploymentModification': grpc.unary_unary_rpc_method_handler(
                    servicer.endDeploymentModification,
                    request_deserializer=tko_dot_tko__pb2.EndDeploymentModification.FromString,
                    response_serializer=tko_dot_tko__pb2.EndDeploymentModificationResponse.SerializeToString,
            ),
            'cancelDeploymentModification': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelDeploymentModification,
                    request_deserializer=tko_dot_tko__pb2.CancelDeploymentModification.FromString,
                    response_serializer=tko_dot_tko__pb2.CancelDeploymentModificationResponse.SerializeToString,
            ),
            'registerPlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.registerPlugin,
                    request_deserializer=tko_dot_tko__pb2.Plugin.FromString,
                    response_serializer=tko_dot_tko__pb2.RegisterResponse.SerializeToString,
            ),
            'deletePlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.deletePlugin,
                    request_deserializer=tko_dot_tko__pb2.DeletePlugin.FromString,
                    response_serializer=tko_dot_tko__pb2.DeleteResponse.SerializeToString,
            ),
            'getPlugin': grpc.unary_unary_rpc_method_handler(
                    servicer.getPlugin,
                    request_deserializer=tko_dot_tko__pb2.GetPlugin.FromString,
                    response_serializer=tko_dot_tko__pb2.Plugin.SerializeToString,
            ),
            'listPlugins': grpc.unary_stream_rpc_method_handler(
                    servicer.listPlugins,
                    request_deserializer=tko_dot_tko__pb2.ListPlugins.FromString,
                    response_serializer=tko_dot_tko__pb2.ListPluginsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tko.API', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class API(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def registerTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/registerTemplate',
            tko_dot_tko__pb2.Template.SerializeToString,
            tko_dot_tko__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/deleteTemplate',
            tko_dot_tko__pb2.DeleteTemplate.SerializeToString,
            tko_dot_tko__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/getTemplate',
            tko_dot_tko__pb2.GetTemplate.SerializeToString,
            tko_dot_tko__pb2.Template.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tko.API/listTemplates',
            tko_dot_tko__pb2.ListTemplates.SerializeToString,
            tko_dot_tko__pb2.ListTemplatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def registerSite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/registerSite',
            tko_dot_tko__pb2.Site.SerializeToString,
            tko_dot_tko__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteSite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/deleteSite',
            tko_dot_tko__pb2.DeleteSite.SerializeToString,
            tko_dot_tko__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getSite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/getSite',
            tko_dot_tko__pb2.GetSite.SerializeToString,
            tko_dot_tko__pb2.Site.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listSites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tko.API/listSites',
            tko_dot_tko__pb2.ListSites.SerializeToString,
            tko_dot_tko__pb2.ListSitesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/createDeployment',
            tko_dot_tko__pb2.CreateDeployment.SerializeToString,
            tko_dot_tko__pb2.CreateDeploymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/deleteDeployment',
            tko_dot_tko__pb2.DeleteDeployment.SerializeToString,
            tko_dot_tko__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/getDeployment',
            tko_dot_tko__pb2.GetDeployment.SerializeToString,
            tko_dot_tko__pb2.Deployment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tko.API/listDeployments',
            tko_dot_tko__pb2.ListDeployments.SerializeToString,
            tko_dot_tko__pb2.ListDeploymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startDeploymentModification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/startDeploymentModification',
            tko_dot_tko__pb2.StartDeploymentModification.SerializeToString,
            tko_dot_tko__pb2.StartDeploymentModificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def endDeploymentModification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/endDeploymentModification',
            tko_dot_tko__pb2.EndDeploymentModification.SerializeToString,
            tko_dot_tko__pb2.EndDeploymentModificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cancelDeploymentModification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/cancelDeploymentModification',
            tko_dot_tko__pb2.CancelDeploymentModification.SerializeToString,
            tko_dot_tko__pb2.CancelDeploymentModificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def registerPlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/registerPlugin',
            tko_dot_tko__pb2.Plugin.SerializeToString,
            tko_dot_tko__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deletePlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/deletePlugin',
            tko_dot_tko__pb2.DeletePlugin.SerializeToString,
            tko_dot_tko__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPlugin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tko.API/getPlugin',
            tko_dot_tko__pb2.GetPlugin.SerializeToString,
            tko_dot_tko__pb2.Plugin.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listPlugins(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/tko.API/listPlugins',
            tko_dot_tko__pb2.ListPlugins.SerializeToString,
            tko_dot_tko__pb2.ListPluginsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
